// Baselayer components
import { Notifications } from "baselayer/components/Notifications";

// React and Redux
import React, { useEffect } from "react";
import PropTypes from "prop-types";
import { Provider, useSelector } from "react-redux";
import ReactDOM from "react-dom";

import { BrowserRouter, Switch } from "react-router-dom";

import { MuiPickersUtilsProvider } from "@material-ui/pickers";
import DayJSUtils from "@date-io/dayjs";

import clsx from "clsx";

// Main style
import styles from "./Main.css";

// Store
import store from "../store";

// Actions
import hydrate from "../actions";
import * as rotateLogoActions from "../ducks/logo";

import PropsRoute from "../route";
import NoMatchingRoute from "./NoMatchingRoute";
import Responsive from "./Responsive";

{% for route in app.routes %}
import {{ route.component }} from "./{{ route.component }}";
{% endfor %}

import Theme from "./Theme";
import ProfileDropdown from "./ProfileDropdown";
import SidebarAndHeader from "./SidebarAndHeader";
import useStyles from "./muiStyles";


const MainContent = ({ root }) => {
  const { open } = useSelector((state) => state.sidebar);

  const classes = useStyles();

  useEffect(() => {
    store.dispatch(hydrate());
    store.dispatch(rotateLogoActions.rotateLogo());
  }, []);

  return (
    <Theme>
      <SidebarAndHeader root={root} open={open} />
      <MuiPickersUtilsProvider utils={DayJSUtils}>

        <Responsive mobileElement={ProfileDropdown} />

        <main
          role="main"
          className={clsx(classes.content, {
            [classes.contentShift]: !open,
          })}
        >

          <Notifications />

          <Switch>

            {%- for route in app.routes %}
            <PropsRoute exact path="{{ route.path }}" component={{ "{" }}{{ route.component }}{{ "}" }} />
            {%- endfor %}

            <PropsRoute component={NoMatchingRoute} />

          </Switch>

        </main>

      </MuiPickersUtilsProvider>
    </Theme>
  );
};

MainContent.propTypes = {
  root: PropTypes.string.isRequired
};

ReactDOM.render(
  <Provider store={store}>
    <BrowserRouter basename="/">
      <MainContent root={`${window.location.host}/`} />
    </BrowserRouter>
  </Provider>,
  document.getElementById("content")
);
